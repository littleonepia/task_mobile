// Mocks generated by Mockito 5.4.4 from annotations
// in task/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:ui' as _i18;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:flutter/material.dart' as _i5;
import 'package:get/get.dart' as _i6;
import 'package:get/get_state_manager/src/simple/list_notifier.dart' as _i17;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i9;
import 'package:task/app/data/models/task_model.dart' as _i3;
import 'package:task/app/data/models/user_model.dart' as _i4;
import 'package:task/app/data/repositories/auth_repository.dart' as _i13;
import 'package:task/app/data/repositories/task_repository.dart' as _i12;
import 'package:task/app/data/repositories/user_repository.dart' as _i14;
import 'package:task/app/data/services/remote/auth_service.dart' as _i7;
import 'package:task/app/data/services/remote/gemini_service.dart' as _i15;
import 'package:task/app/data/services/remote/task_service.dart' as _i10;
import 'package:task/app/data/services/remote/user_service.dart' as _i11;
import 'package:task/app/modules/admin/main/controllers/admin_main_controller.dart'
    as _i21;
import 'package:task/app/modules/admin/member/controllers/admin_member_controller.dart'
    as _i19;
import 'package:task/app/modules/admin/member_detail/controllers/admin_member_detail_controller.dart'
    as _i20;
import 'package:task/app/modules/login/controllers/login_controller.dart'
    as _i16;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeCollectionReference_0<T extends Object?> extends _i1.SmartFake
    implements _i2.CollectionReference<T> {
  _FakeCollectionReference_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTaskModel_1 extends _i1.SmartFake implements _i3.TaskModel {
  _FakeTaskModel_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQuerySnapshot_2<T extends Object?> extends _i1.SmartFake
    implements _i2.QuerySnapshot<T> {
  _FakeQuerySnapshot_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserModel_3 extends _i1.SmartFake implements _i4.UserModel {
  _FakeUserModel_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeTextEditingController_4 extends _i1.SmartFake
    implements _i5.TextEditingController {
  _FakeTextEditingController_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInternalFinalCallback_5<T> extends _i1.SmartFake
    implements _i6.InternalFinalCallback<T> {
  _FakeInternalFinalCallback_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxList_6<E> extends _i1.SmartFake implements _i6.RxList<E> {
  _FakeRxList_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGlobalKey_7<T extends _i5.State<_i5.StatefulWidget>>
    extends _i1.SmartFake implements _i5.GlobalKey<T> {
  _FakeGlobalKey_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRx_8<T> extends _i1.SmartFake implements _i6.Rx<T> {
  _FakeRx_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxBool_9 extends _i1.SmartFake implements _i6.RxBool {
  _FakeRxBool_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeRxInt_10 extends _i1.SmartFake implements _i6.RxInt {
  _FakeRxInt_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AuthService].
///
/// See the documentation for Mockito's code generation for more information.
class MockAuthService extends _i1.Mock implements _i7.AuthService {
  MockAuthService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i4.UserModel?> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<String> changePassword(
    String? userId,
    String? oldPassword,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [
            userId,
            oldPassword,
            newPassword,
          ],
        ),
        returnValue: _i8.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #changePassword,
            [
              userId,
              oldPassword,
              newPassword,
            ],
          ),
        )),
      ) as _i8.Future<String>);
}

/// A class which mocks [TaskService].
///
/// See the documentation for Mockito's code generation for more information.
class MockTaskService extends _i1.Mock implements _i10.TaskService {
  MockTaskService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get collection => (super.noSuchMethod(
        Invocation.getter(#collection),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#collection),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  _i3.TaskModel fromJson(Map<String, dynamic>? json) => (super.noSuchMethod(
        Invocation.method(
          #fromJson,
          [json],
        ),
        returnValue: _FakeTaskModel_1(
          this,
          Invocation.method(
            #fromJson,
            [json],
          ),
        ),
      ) as _i3.TaskModel);

  @override
  _i8.Future<List<_i3.TaskModel>> getTasksByUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTasksByUser,
          [userId],
        ),
        returnValue: _i8.Future<List<_i3.TaskModel>>.value(<_i3.TaskModel>[]),
      ) as _i8.Future<List<_i3.TaskModel>>);

  @override
  _i8.Future<List<_i3.TaskModel>> getTasksByStatus(String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTasksByStatus,
          [status],
        ),
        returnValue: _i8.Future<List<_i3.TaskModel>>.value(<_i3.TaskModel>[]),
      ) as _i8.Future<List<_i3.TaskModel>>);

  @override
  _i8.Future<_i3.TaskModel?> create(_i3.TaskModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [model],
        ),
        returnValue: _i8.Future<_i3.TaskModel?>.value(),
      ) as _i8.Future<_i3.TaskModel?>);

  @override
  _i8.Future<_i3.TaskModel?> update(_i3.TaskModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [model],
        ),
        returnValue: _i8.Future<_i3.TaskModel?>.value(),
      ) as _i8.Future<_i3.TaskModel?>);

  @override
  _i8.Future<List<_i3.TaskModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i8.Future<List<_i3.TaskModel>>.value(<_i3.TaskModel>[]),
      ) as _i8.Future<List<_i3.TaskModel>>);

  @override
  _i8.Future<bool> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i3.TaskModel?> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i8.Future<_i3.TaskModel?>.value(),
      ) as _i8.Future<_i3.TaskModel?>);

  @override
  _i8.Future<_i2.QuerySnapshot<Object?>> query({
    List<String>? whereFields,
    List<dynamic>? whereValues,
    String? orderBy,
    bool? descending,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [],
          {
            #whereFields: whereFields,
            #whereValues: whereValues,
            #orderBy: orderBy,
            #descending: descending,
            #limit: limit,
          },
        ),
        returnValue: _i8.Future<_i2.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_2<Object?>(
          this,
          Invocation.method(
            #query,
            [],
            {
              #whereFields: whereFields,
              #whereValues: whereValues,
              #orderBy: orderBy,
              #descending: descending,
              #limit: limit,
            },
          ),
        )),
      ) as _i8.Future<_i2.QuerySnapshot<Object?>>);

  @override
  _i8.Future<void> batchDelete(List<String>? ids) => (super.noSuchMethod(
        Invocation.method(
          #batchDelete,
          [ids],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> batchUpdate(List<_i3.TaskModel>? models) =>
      (super.noSuchMethod(
        Invocation.method(
          #batchUpdate,
          [models],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [UserService].
///
/// See the documentation for Mockito's code generation for more information.
class MockUserService extends _i1.Mock implements _i11.UserService {
  MockUserService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.CollectionReference<Object?> get collection => (super.noSuchMethod(
        Invocation.getter(#collection),
        returnValue: _FakeCollectionReference_0<Object?>(
          this,
          Invocation.getter(#collection),
        ),
      ) as _i2.CollectionReference<Object?>);

  @override
  _i4.UserModel fromJson(Map<String, dynamic>? json) => (super.noSuchMethod(
        Invocation.method(
          #fromJson,
          [json],
        ),
        returnValue: _FakeUserModel_3(
          this,
          Invocation.method(
            #fromJson,
            [json],
          ),
        ),
      ) as _i4.UserModel);

  @override
  _i8.Future<_i4.UserModel?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<_i4.UserModel?> create(_i4.UserModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [model],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<void> deleteUserAndTasks(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserAndTasks,
          [userId],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<List<_i4.UserModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i8.Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]),
      ) as _i8.Future<List<_i4.UserModel>>);

  @override
  _i8.Future<_i4.UserModel?> fetchUserWithTasks(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetchUserWithTasks,
          [userId],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<_i4.UserModel?> update(_i4.UserModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [model],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<bool> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i4.UserModel?> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<_i2.QuerySnapshot<Object?>> query({
    List<String>? whereFields,
    List<dynamic>? whereValues,
    String? orderBy,
    bool? descending,
    int? limit,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #query,
          [],
          {
            #whereFields: whereFields,
            #whereValues: whereValues,
            #orderBy: orderBy,
            #descending: descending,
            #limit: limit,
          },
        ),
        returnValue: _i8.Future<_i2.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_2<Object?>(
          this,
          Invocation.method(
            #query,
            [],
            {
              #whereFields: whereFields,
              #whereValues: whereValues,
              #orderBy: orderBy,
              #descending: descending,
              #limit: limit,
            },
          ),
        )),
      ) as _i8.Future<_i2.QuerySnapshot<Object?>>);

  @override
  _i8.Future<void> batchDelete(List<String>? ids) => (super.noSuchMethod(
        Invocation.method(
          #batchDelete,
          [ids],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> batchUpdate(List<_i4.UserModel>? models) =>
      (super.noSuchMethod(
        Invocation.method(
          #batchUpdate,
          [models],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);
}

/// A class which mocks [ITaskRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockITaskRepository extends _i1.Mock implements _i12.ITaskRepository {
  MockITaskRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i3.TaskModel>> getTasksByUser(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTasksByUser,
          [userId],
        ),
        returnValue: _i8.Future<List<_i3.TaskModel>>.value(<_i3.TaskModel>[]),
      ) as _i8.Future<List<_i3.TaskModel>>);

  @override
  _i8.Future<List<_i3.TaskModel>> getTasksByStatus(String? status) =>
      (super.noSuchMethod(
        Invocation.method(
          #getTasksByStatus,
          [status],
        ),
        returnValue: _i8.Future<List<_i3.TaskModel>>.value(<_i3.TaskModel>[]),
      ) as _i8.Future<List<_i3.TaskModel>>);

  @override
  _i8.Future<_i3.TaskModel?> create(_i3.TaskModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [model],
        ),
        returnValue: _i8.Future<_i3.TaskModel?>.value(),
      ) as _i8.Future<_i3.TaskModel?>);

  @override
  _i8.Future<_i3.TaskModel?> update(_i3.TaskModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [model],
        ),
        returnValue: _i8.Future<_i3.TaskModel?>.value(),
      ) as _i8.Future<_i3.TaskModel?>);

  @override
  _i8.Future<bool> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i3.TaskModel?> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i8.Future<_i3.TaskModel?>.value(),
      ) as _i8.Future<_i3.TaskModel?>);

  @override
  _i8.Future<List<_i3.TaskModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i8.Future<List<_i3.TaskModel>>.value(<_i3.TaskModel>[]),
      ) as _i8.Future<List<_i3.TaskModel>>);
}

/// A class which mocks [IAuthRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIAuthRepository extends _i1.Mock implements _i13.IAuthRepository {
  MockIAuthRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i4.UserModel?> login(
    String? email,
    String? password,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #login,
          [
            email,
            password,
          ],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<String> changePassword(
    String? userId,
    String? oldPassword,
    String? newPassword,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #changePassword,
          [
            userId,
            oldPassword,
            newPassword,
          ],
        ),
        returnValue: _i8.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #changePassword,
            [
              userId,
              oldPassword,
              newPassword,
            ],
          ),
        )),
      ) as _i8.Future<String>);
}

/// A class which mocks [IUserRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockIUserRepository extends _i1.Mock implements _i14.IUserRepository {
  MockIUserRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i4.UserModel?> getUserByEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserByEmail,
          [email],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<bool> deleteUserAndTasks(String? userId) => (super.noSuchMethod(
        Invocation.method(
          #deleteUserAndTasks,
          [userId],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i4.UserModel?> create(_i4.UserModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #create,
          [model],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<_i4.UserModel?> update(_i4.UserModel? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [model],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<bool> delete(String? id) => (super.noSuchMethod(
        Invocation.method(
          #delete,
          [id],
        ),
        returnValue: _i8.Future<bool>.value(false),
      ) as _i8.Future<bool>);

  @override
  _i8.Future<_i4.UserModel?> getById(String? id) => (super.noSuchMethod(
        Invocation.method(
          #getById,
          [id],
        ),
        returnValue: _i8.Future<_i4.UserModel?>.value(),
      ) as _i8.Future<_i4.UserModel?>);

  @override
  _i8.Future<List<_i4.UserModel>> getAll() => (super.noSuchMethod(
        Invocation.method(
          #getAll,
          [],
        ),
        returnValue: _i8.Future<List<_i4.UserModel>>.value(<_i4.UserModel>[]),
      ) as _i8.Future<List<_i4.UserModel>>);
}

/// A class which mocks [GeminiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeminiService extends _i1.Mock implements _i15.GeminiService {
  MockGeminiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get apiKey => (super.noSuchMethod(
        Invocation.getter(#apiKey),
        returnValue: _i9.dummyValue<String>(
          this,
          Invocation.getter(#apiKey),
        ),
      ) as String);

  @override
  _i8.Future<String> generateContent(
    String? prompt,
    String? data,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #generateContent,
          [
            prompt,
            data,
          ],
        ),
        returnValue: _i8.Future<String>.value(_i9.dummyValue<String>(
          this,
          Invocation.method(
            #generateContent,
            [
              prompt,
              data,
            ],
          ),
        )),
      ) as _i8.Future<String>);
}

/// A class which mocks [LoginController].
///
/// See the documentation for Mockito's code generation for more information.
class MockLoginController extends _i1.Mock implements _i16.LoginController {
  MockLoginController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_4(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i5.TextEditingController);

  @override
  _i5.TextEditingController get passwordController => (super.noSuchMethod(
        Invocation.getter(#passwordController),
        returnValue: _FakeTextEditingController_4(
          this,
          Invocation.getter(#passwordController),
        ),
      ) as _i5.TextEditingController);

  @override
  _i6.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  _i6.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  _i8.Future<void> login() => (super.noSuchMethod(
        Invocation.method(
          #login,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AdminMemberController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdminMemberController extends _i1.Mock
    implements _i19.AdminMemberController {
  MockAdminMemberController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.RxList<_i4.UserModel> get members => (super.noSuchMethod(
        Invocation.getter(#members),
        returnValue: _FakeRxList_6<_i4.UserModel>(
          this,
          Invocation.getter(#members),
        ),
      ) as _i6.RxList<_i4.UserModel>);

  @override
  _i6.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  _i6.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i8.Future<void> innitialData() => (super.noSuchMethod(
        Invocation.method(
          #innitialData,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> goToMemberDetail(_i4.UserModel? user) => (super.noSuchMethod(
        Invocation.method(
          #goToMemberDetail,
          [user],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> goToCreateMember() => (super.noSuchMethod(
        Invocation.method(
          #goToCreateMember,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AdminMemberDetailController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdminMemberDetailController extends _i1.Mock
    implements _i20.AdminMemberDetailController {
  MockAdminMemberDetailController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.TextEditingController get nameController => (super.noSuchMethod(
        Invocation.getter(#nameController),
        returnValue: _FakeTextEditingController_4(
          this,
          Invocation.getter(#nameController),
        ),
      ) as _i5.TextEditingController);

  @override
  _i5.TextEditingController get emailController => (super.noSuchMethod(
        Invocation.getter(#emailController),
        returnValue: _FakeTextEditingController_4(
          this,
          Invocation.getter(#emailController),
        ),
      ) as _i5.TextEditingController);

  @override
  _i5.TextEditingController get phoneController => (super.noSuchMethod(
        Invocation.getter(#phoneController),
        returnValue: _FakeTextEditingController_4(
          this,
          Invocation.getter(#phoneController),
        ),
      ) as _i5.TextEditingController);

  @override
  _i5.TextEditingController get passwordController => (super.noSuchMethod(
        Invocation.getter(#passwordController),
        returnValue: _FakeTextEditingController_4(
          this,
          Invocation.getter(#passwordController),
        ),
      ) as _i5.TextEditingController);

  @override
  _i5.GlobalKey<_i5.FormState> get adminMemberDetailFormKey =>
      (super.noSuchMethod(
        Invocation.getter(#adminMemberDetailFormKey),
        returnValue: _FakeGlobalKey_7<_i5.FormState>(
          this,
          Invocation.getter(#adminMemberDetailFormKey),
        ),
      ) as _i5.GlobalKey<_i5.FormState>);

  @override
  _i6.Rx<_i4.UserModel> get userModel => (super.noSuchMethod(
        Invocation.getter(#userModel),
        returnValue: _FakeRx_8<_i4.UserModel>(
          this,
          Invocation.getter(#userModel),
        ),
      ) as _i6.Rx<_i4.UserModel>);

  @override
  _i6.RxBool get isNewMember => (super.noSuchMethod(
        Invocation.getter(#isNewMember),
        returnValue: _FakeRxBool_9(
          this,
          Invocation.getter(#isNewMember),
        ),
      ) as _i6.RxBool);

  @override
  _i6.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  _i6.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  _i8.Future<void> onInit() => (super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> createMember() => (super.noSuchMethod(
        Invocation.method(
          #createMember,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> updateMember() => (super.noSuchMethod(
        Invocation.method(
          #updateMember,
          [],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  _i8.Future<void> deleteMember(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteMember,
          [id],
        ),
        returnValue: _i8.Future<void>.value(),
        returnValueForMissingStub: _i8.Future<void>.value(),
      ) as _i8.Future<void>);

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AdminMainController].
///
/// See the documentation for Mockito's code generation for more information.
class MockAdminMainController extends _i1.Mock
    implements _i21.AdminMainController {
  MockAdminMainController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.RxInt get currentIndex => (super.noSuchMethod(
        Invocation.getter(#currentIndex),
        returnValue: _FakeRxInt_10(
          this,
          Invocation.getter(#currentIndex),
        ),
      ) as _i6.RxInt);

  @override
  set currentIndex(_i6.RxInt? _currentIndex) => super.noSuchMethod(
        Invocation.setter(
          #currentIndex,
          _currentIndex,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i6.InternalFinalCallback<void> get onStart => (super.noSuchMethod(
        Invocation.getter(#onStart),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onStart),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  _i6.InternalFinalCallback<void> get onDelete => (super.noSuchMethod(
        Invocation.getter(#onDelete),
        returnValue: _FakeInternalFinalCallback_5<void>(
          this,
          Invocation.getter(#onDelete),
        ),
      ) as _i6.InternalFinalCallback<void>);

  @override
  bool get initialized => (super.noSuchMethod(
        Invocation.getter(#initialized),
        returnValue: false,
      ) as bool);

  @override
  bool get isClosed => (super.noSuchMethod(
        Invocation.getter(#isClosed),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  int get listeners => (super.noSuchMethod(
        Invocation.getter(#listeners),
        returnValue: 0,
      ) as int);

  @override
  void changeTab(int? index) => super.noSuchMethod(
        Invocation.method(
          #changeTab,
          [index],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void logOut() => super.noSuchMethod(
        Invocation.method(
          #logOut,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void update([
    List<Object>? ids,
    bool? condition = true,
  ]) =>
      super.noSuchMethod(
        Invocation.method(
          #update,
          [
            ids,
            condition,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onInit() => super.noSuchMethod(
        Invocation.method(
          #onInit,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onReady() => super.noSuchMethod(
        Invocation.method(
          #onReady,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void onClose() => super.noSuchMethod(
        Invocation.method(
          #onClose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void $configureLifeCycle() => super.noSuchMethod(
        Invocation.method(
          #$configureLifeCycle,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListener(_i17.GetStateUpdate? listener) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void removeListener(_i18.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refresh() => super.noSuchMethod(
        Invocation.method(
          #refresh,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void refreshGroup(Object? id) => super.noSuchMethod(
        Invocation.method(
          #refreshGroup,
          [id],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyChildrens() => super.noSuchMethod(
        Invocation.method(
          #notifyChildrens,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListenerId(
    Object? id,
    _i18.VoidCallback? listener,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #removeListenerId,
          [
            id,
            listener,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i17.Disposer addListenerId(
    Object? key,
    _i17.GetStateUpdate? listener,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addListenerId,
          [
            key,
            listener,
          ],
        ),
        returnValue: () {},
      ) as _i17.Disposer);

  @override
  void disposeId(Object? id) => super.noSuchMethod(
        Invocation.method(
          #disposeId,
          [id],
        ),
        returnValueForMissingStub: null,
      );
}
